image: Visual Studio 2017
init:
    - git config --global core.autocrlf input
    
clone_folder: c:\projects\mock\
shallow_clone: true
    
platform:
    - x64
    - x86
    
configuration:
    - Debug
    - Release
    
environment:
    matrix:
        - BOOST_ROOT: C:\Libraries\boost_1_67_0 
          BOOST_LIBRARYDIR: C:\Libraries\boost_1_67_0\lib64-msvc-14.1
          TOOLCHAIN: msvc15
        - BOOST_ROOT: C:\Libraries\boost_1_67_0 
          BOOST_LIBRARYDIR: C:\Libraries\boost_1_67_0\lib32-msvc-14.1
          TOOLCHAIN: msvc15
        - BOOST_ROOT: C:\Libraries\boost_1_66_0 
          BOOST_LIBRARYDIR: C:\Libraries\boost_1_66_0\lib64-msvc-14.1
          TOOLCHAIN: msvc15
        - BOOST_ROOT: C:\Libraries\boost_1_66_0 
          BOOST_LIBRARYDIR: C:\Libraries\boost_1_66_0\lib32-msvc-14.1
          TOOLCHAIN: msvc15
        - BOOST_ROOT: C:\Libraries\boost_1_65_1
          BOOST_LIBRARYDIR: C:\Libraries\boost_1_65_1\lib64-msvc-14.1
          TOOLCHAIN: msvc15
        - BOOST_ROOT: C:\Libraries\boost_1_65_1
          BOOST_LIBRARYDIR: C:\Libraries\boost_1_65_1\lib32-msvc-14.1
          TOOLCHAIN: msvc15
        - BOOST_ROOT: C:\Libraries\boost_1_64_0 
          BOOST_LIBRARYDIR: C:\Libraries\boost_1_64_0\lib64-msvc-14.1
          TOOLCHAIN: msvc15
        - BOOST_ROOT: C:\Libraries\boost_1_64_0 
          BOOST_LIBRARYDIR: C:\Libraries\boost_1_64_0\lib32-msvc-14.1
          TOOLCHAIN: msvc15
        - BOOST_ROOT: C:\Libraries\boost_1_67_0 
          BOOST_LIBRARYDIR: C:\Libraries\boost_1_67_0\lib64-msvc-14.1
          TOOLCHAIN: msvc14
        - BOOST_ROOT: C:\Libraries\boost_1_67_0 
          BOOST_LIBRARYDIR: C:\Libraries\boost_1_67_0\lib32-msvc-14.1
          TOOLCHAIN: msvc14
        - BOOST_ROOT: C:\Libraries\boost_1_66_0 
          BOOST_LIBRARYDIR: C:\Libraries\boost_1_66_0\lib64-msvc-14.1
          TOOLCHAIN: msvc14
        - BOOST_ROOT: C:\Libraries\boost_1_66_0 
          BOOST_LIBRARYDIR: C:\Libraries\boost_1_66_0\lib32-msvc-14.1
          TOOLCHAIN: msvc14
        - BOOST_ROOT: C:\Libraries\boost_1_65_1 
          BOOST_LIBRARYDIR: C:\Libraries\boost_1_65_1\lib64-msvc-14.1
          TOOLCHAIN: msvc14
        - BOOST_ROOT: C:\Libraries\boost_1_65_1 
          BOOST_LIBRARYDIR: C:\Libraries\boost_1_65_1\lib32-msvc-14.1
          TOOLCHAIN: msvc14
        - BOOST_ROOT: C:\Libraries\boost_1_64_0 
          BOOST_LIBRARYDIR: C:\Libraries\boost_1_64_0\lib64-msvc-14.1
          TOOLCHAIN: msvc14
        - BOOST_ROOT: C:\Libraries\boost_1_64_0 
          BOOST_LIBRARYDIR: C:\Libraries\boost_1_64_0\lib32-msvc-14.1
          TOOLCHAIN: msvc14
          
matrix:
    fast_finish: false
    exclude:
        - platform: x64
          BOOST_LIBRARYDIR: C:\Libraries\boost_1_67_0\lib32-msvc-14.1
        - platform: x64
          BOOST_LIBRARYDIR: C:\Libraries\boost_1_66_0\lib32-msvc-14.1
        - platform: x64
          BOOST_LIBRARYDIR: C:\Libraries\boost_1_65_1\lib32-msvc-14.1
        - platform: x64
          BOOST_LIBRARYDIR: C:\Libraries\boost_1_64_0\lib32-msvc-14.1
        - platform: x86
          BOOST_LIBRARYDIR: C:\Libraries\boost_1_67_0\lib64-msvc-14.1
        - platform: x86
          BOOST_LIBRARYDIR: C:\Libraries\boost_1_66_0\lib64-msvc-14.1
        - platform: x86
          BOOST_LIBRARYDIR: C:\Libraries\boost_1_65_1\lib64-msvc-14.1
        - platform: x86
          BOOST_LIBRARYDIR: C:\Libraries\boost_1_64_0\lib64-msvc-14.1
    
build:
    project: win_env\mock_lib\mock_lib.sln
    verbosity: minimal
    
test_script:
    - ps: |
        msbuild "C:\projects\mock\win_env\mock_lib\mock_lib.sln" /verbosity:minimal /logger:"C:\Program Files\AppVeyor\BuildAgent\Appveyor.MSBuildLogger.dll"
        $outcome = If ($LASTEXITCODE -eq 0) { "Passed" } Else { "Failed" }
        
        Add-AppveyorTest -Name "Compile-time test" -Framework Boost -Filename tmp\test\mock_test.exe -Outcome $outcome
        If ($outcome -ne "Passed") { throw $outcome }
    - ps: |
        $processinfo = New-Object System.Diagnostics.ProcessStartInfo
        $processinfo.FileName = "$(pwd)\tmp\test\mock_test.exe"
        $processinfo.RedirectStandardError = $true
        $processinfo.RedirectStandardOutput = $true
        $processinfo.UseShellExecute = $false
        $process = New-Object System.Diagnostics.Process
        $process.StartInfo = $processinfo

        Try {
            $process.Start() | Out-Null
            $process.WaitForExit()
        } Catch [System.Management.Automation.RemoteException] { If ($_.FullyQualifiedErrorId -eq "NativeCommandError") { $error.Remove[$Error[0]] } Else { Throw }
        } Catch { Throw }
        
        $result = "$($process.StandardOutput.ReadToEnd()) $($process.StandardError.ReadToEnd())"
        $outcome = If ($process.exitcode -eq 0) { "Passed" } Else { "Failed" }
        
        Add-AppveyorTest -Name "Run-time test" -Framework Boost -Filename tmp\test\mock_test.exe -Outcome $outcome -Stdout $result
        If ($outcome -ne "Passed") { throw $outcome }